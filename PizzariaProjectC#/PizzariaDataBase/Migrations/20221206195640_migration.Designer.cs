// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzariaDB.Models;

#nullable disable

namespace PizzariaDB.Migrations
{
    [DbContext(typeof(PizzariaContext))]
    [Migration("20221206195640_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PizzariaDB.Model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Pizza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PizzaSize")
                        .HasColumnType("int");

                    b.Property<string>("PizzaToppings")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PizzariaId")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("PizzariaId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PizzariaDB.Model.Pizzaria", b =>
                {
                    b.Property<int>("PizzariaId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PizzariaId");

                    b.ToTable("Pizzarias");
                });

            modelBuilder.Entity("PizzariaDB.Model.User", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("OrderId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PizzariaDB.Model.Order", b =>
                {
                    b.HasOne("PizzariaDB.Model.Pizzaria", "Pizzaria")
                        .WithMany("Orders")
                        .HasForeignKey("PizzariaId")
                        .HasConstraintName("FK_Orders_Pizzarias");

                    b.Navigation("Pizzaria");
                });

            modelBuilder.Entity("PizzariaDB.Model.User", b =>
                {
                    b.HasOne("PizzariaDB.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Users_Orders");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PizzariaDB.Model.Pizzaria", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
